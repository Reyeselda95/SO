BACI System: C-- to PCODE Compiler, 10/03/2010
Source file: C:\Users\alejandro\Desktop\jbaci-1.4.6.binaries\examples\fabrica.cm  Fri Nov 21 18:53:14 2014
 line  pc
   1    0  //Recursos compartidos
   2    0  #include "gdefs.cm"
>   1    0  // Constants for jBACI graphcs
>   2    0  const
>   3    0     int RED   = 1; int BLACK   = 2; int BLUE  = 3; int YELLOW = 4;
>   4    0     int GREEN = 5; int MAGENTA = 6; int WHITE = 7;
>   5    0     
>   6    0     int CIRCLE         = 1; 
>   7    0     int LINE           = 2; 
>   8    0     int RECTANGLE      = 3; 
>   9    0     int TRIANGLE       = 4; 
>  10    0     int ANIMAGE        = 5;
>  11    0     int RNDRECT 		  = 6;
>  12    0     int LINE_CIRCLE    = 21; 
>  13    0     int LINE_RECTANGLE = 22; 
>  14    0     int LINE_TRIANGLE  = 23; 
>  15    0     int LINE_RNDRECT   = 24;
>  16    0     int NUMBER_BOX     = 25;
>  17    0     
>  18    0  
Returning to file C:\Users\alejandro\Desktop\jbaci-1.4.6.binaries\examples\fabrica.cm
   3    0  semaphore m;		//Semaforo que controla la creación de piezas de la máquina
   4    0  semaphore p;		//Semáforo que controla el acceso a las piezas
   5    0  semaphore r;		// Semáforo que controla al robot
   6    0  int piezas;		//Nº de piezas creadas
   7    0  const int N=3;		//Total de piezas que pueden haber en la cinta
   8    0  int piezascogidas;	//Total de piezas recogidas
   9    0  int paquete;		//Nº de paquetes creados que contienen 3 piezas cada uno
  10    0  int oper;		//Nº de veces que ha pasado el operario
  11    0  const int BG=20;	//Fondo Blanco de los gráficos
  12    0  int CIN=21;		//Cinta transportadora
  13    0  int P1=22;		//Pieza 1
  14    0  int P2=23;		//Pieza 2
  15    0  int P3=24;		//Pieza 3
  16    0  int ROBASE=25;		//Base del Robot
  17    0  int ROB=26;		//Robot
  18    0  int CABOP=27;		//Cabeza del perario
  19    0  int CUEOP=28;		//Cuerpo del operario
  20    0  int MAQ=29;		//Máquna
  21    0  
  22    0  void maquina(){
  23    0  	while(1){
  24    2  		wait(m);
  25    4  		wait(p);
  26    6  		if(piezas<N){
  27   10  			if(piezas==0){
  28   14  				makevisible(P1,0);
  29   17  				makevisible(P2,0);
  30   20  				makevisible(P3,0);
  31   23  			}
  32   23  			if(piezas==1){
  33   27  				makevisible(P3,1);
  34   30  				
  35   30  			}
  36   30  			if(piezas==2){
  37   34  				makevisible(P2,1);
  38   37  				makevisible(P3,1);
  39   40  			}
  40   40  			if(piezas==3){
  41   44  				makevisible(P1,1);
  42   47  				makevisible(P2,1);
  43   50  				makevisible(P3,1);
  44   53  			}
  45   53  			piezas++;	//Pone una nueva pieza en la cinta
  46   58  			cout<<"Soy la máquina y añado una pieza. Hay "<< piezas << " piezas."<<endl;
  47   63  			if(piezas==1){
  48   67  				moveto(MAQ,100,150);
  49   71  				changecolor(MAQ, BLUE);
  50   74  				makevisible(P1,1);
  51   77  				changecolor(MAQ, YELLOW);
  52   80  				moveto(MAQ,100,100);
  53   84  				makevisible(P1,0);
  54   87  				makevisible(P2,1);
  55   90  				makevisible(P2,0);
  56   93  				makevisible(P3,1);
  57   96  				
  58   96  			}
  59   96  			if(piezas==2){
  60  100  				moveto(MAQ,100,150);
  61  104  				changecolor(MAQ, BLUE);
  62  107  				makevisible(P1,1);
  63  110  				changecolor(MAQ, YELLOW);
  64  113  				moveto(MAQ,100,100);
  65  117  				makevisible(P1,0);
  66  120  				makevisible(P2,1);
  67  123  			}
  68  123  			if(piezas==3){
  69  127  				moveto(MAQ,100,150);
  70  131  				changecolor(MAQ, BLUE);
  71  134  				makevisible(P1,1);
  72  137  				changecolor(MAQ, YELLOW);
  73  140  				moveto(MAQ,100,100);
  74  144  			}
  75  144  		}
  76  144  		signal(p);
  77  146  		signal(r);	
  78  148  	}
  79  149  }
  80  150  
  81  150  void robot(){
  82  150  	while(1){
  83  152  		wait(r);
  84  154  		wait(p);
  85  156  		piezas--;		//Quita una pieza de la cinta
  86  161  		piezascogidas++;	//Pone una pieza en un paquete
  87  166  			if(piezas==-1){piezas=0;}
  88  174  			if(piezas==0){
  89  178  				changecolor(ROB, GREEN);
  90  181  				moveto(ROB,500,100);
  91  185  				makevisible(P3,0);
  92  188  				moveto(ROB,500,50);
  93  192  				changecolor(ROB, RED);
  94  195  			}
  95  195  			if(piezas==1){
  96  199  				changecolor(ROB, GREEN);
  97  202  				moveto(ROB,500,100);
  98  206  				makevisible(P3,0);
  99  209  				moveto(ROB,500,50);
 100  213  				changecolor(ROB, RED);
 101  216  				makevisible(P2,0);
 102  219  				makevisible(P3,1);
 103  222  			}
 104  222  			if(piezas==2){
 105  226  				changecolor(ROB, GREEN);
 106  229  				moveto(ROB,500,100);
 107  233  				makevisible(P3,0);
 108  236  				moveto(ROB,500,50);
 109  240  				changecolor(ROB, RED);
 110  243  				makevisible(P2,0);
 111  246  				makevisible(P3,1);
 112  249  				makevisible(P1,0);
 113  252  				makevisible(P2,1);
 114  255  			}
 115  255  		cout << "Soy el robot y cojo una pieza para meterla a un paquete. Hay " << paquete << " paquetes." << endl;
 116  260  		signal(p);
 117  262  		signal(m);
 118  264  		if(piezascogidas==3){	//Cuando Se han cogido 3 piezas se completa un paquete
 119  268  			paquete++;
 120  273  			piezascogidas=0;
 121  276  		}
 122  276  	}
 123  277  }
 124  278  
 125  278  void operario(){
 126  278  	while(1){
 127  280  		wait(p);
 128  282  		if(piezas>=3){
 129  286  			piezas=piezas-3;
 130  291  			signal(m);signal(m);signal(m);
 131  297  			if(piezas==0){
 132  301  				moveto(CABOP,275,300);
 133  305  				moveto(CUEOP,300,350);
 134  309  				changecolor(CABOP,GREEN);
 135  312  				changecolor(CUEOP,GREEN);
 136  315  				makevisible(P1,0);
 137  318  				makevisible(P2,0);
 138  321  				makevisible(P3,0);
 139  324  				changecolor(CUEOP,RED);
 140  327  				changecolor(CABOP,RED);
 141  330  				moveto(CUEOP,300,400);
 142  334  				moveto(CABOP,275,350);
 143  338  			}
 144  338  			cout<<"Soy el operario y cojo 3 piezas para control de calidad"<<endl;
 145  340  			oper++;
 146  345  			if(oper==10){exit(-1);} // Cuando el operario haya pasado 10 veces el programa parará.
 147  352  		}
 148  352  		signal(p);
 149  354  	}
 150  355  }
 151  356  
 152  356  void main(){
 153  357  	create(BG,RECTANGLE, WHITE,0,0,600,450);	//Fondo de Pantalla
 154  365  	create(CIN, RECTANGLE, BLACK, 0,150,600,150);	//Cinta transportadora
 155  373  	create(ROBASE, RECTANGLE, BLUE, 450,50,100,50);	//Base del robot
 156  381  	create(ROB, TRIANGLE, RED, 500,50,100,50);	//Cabeza del Robot
 157  389  	create(MAQ, TRIANGLE, YELLOW, 100,100,50,-50);	//Maquina
 158  398  	create(CABOP,CIRCLE,RED,275,350,50,50);		//Cabeza del operario
 159  406  	create(CUEOP,TRIANGLE,RED,300,400,50,50);	//Cuerpo del operario
 160  414  	create(P1, RECTANGLE,MAGENTA,50,200,100,50);	//Pieza 1
 161  422  	create(P2, RECTANGLE,MAGENTA,250,200,100,50);	//Pieza 2
 162  430  	create(P3, RECTANGLE,MAGENTA,450,200,100,50);	//Pieza 3
 163  438  	initialsem(m, N);	//Se inicializa a la máquina con la constante N se bloqueará si es -1
 164  441  	initialsem(p,1);	//El semáforo de acceso a piezas se inicializa a 1 
 165  444  	initialsem(r,0);	//El semáforo del robot se inicializa a 0 para que se bloquee en el caso que sea -1
 166  447  	piezas=0;		//Inicializamos las piezas a 0
 167  450  	piezascogidas=0;	//Inicializamos las piezas que cogemos para un paquete a 0
 168  453  	paquete=0;		//Inicializamos los paquetes de la producción a 0
 169  456  	oper=0;			//Inicializamos las veces que un operario pasa revisión de piezas a 0
 170  459  	cobegin{
 171  460  		
 172  460  			maquina();
 173  463  			robot();
 174  466  			operario();
 175  469  		
 176  469  	}
 177  470  }
